
@warning school_class.schoole: word 'schoole' seems not found in library
@warning object definition: wechat_workapp_identify: word 'workapp' seems not found in library
@warning object definition: wechat_miniapp_identify: word 'miniapp' seems not found in library



=================Execute Report (Model Time 200126T1313) @Mon Jan 27 11:58:25 CST 2020, 40 objects and 301 fields===========================



 processing: platform


 processing: province


 processing: province.platform.platform

Info: Add virtual field [provinces(es)] to <platform>
	province.platform


 processing: city


 processing: city.province.province

Info: Add virtual field [citys(es)] to <province>
	city.province


 processing: city.platform.platform

Info: Add virtual field [citys(es)] to <platform>
	city.platform


 processing: district


 processing: district.city.city

Info: Add virtual field [districts(es)] to <city>
	district.city


 processing: district.platform.platform

Info: Add virtual field [districts(es)] to <platform>
	district.platform


 processing: location


 processing: location.district.district

Info: Add virtual field [locations(es)] to <district>
	location.district


 processing: location.province.province

Info: Add virtual field [locations(es)] to <province>
	location.province


 processing: school_class


 processing: school_class.teacher.class_teacher

Info: Add virtual field [school_classs(es)] to <teacher>
	school_class.class_teacher


 processing: school_class.platform.platform

Info: Add virtual field [school_classs(es)] to <platform>
	school_class.platform


 processing: school_class.change_request.cq

Info: Add virtual field [school_classs(es)] to <change_request>
	school_class.cq


 processing: teacher


 processing: teacher.platform.platform

Info: Add virtual field [teachers(es)] to <platform>
	teacher.platform


 processing: teacher.change_request.cq

Info: Add virtual field [teachers(es)] to <change_request>
	teacher.cq


 processing: guardian


 processing: guardian.location.address

Info: Add virtual field [guardians(es)] to <location>
	guardian.address


 processing: guardian.wechat_user.wechat_user

Info: Add virtual field [guardians(es)] to <wechat_user>
	guardian.wechat_user


 processing: guardian.platform.platform

Info: Add virtual field [guardians(es)] to <platform>
	guardian.platform


 processing: guardian.change_request.cq

Info: Add virtual field [guardians(es)] to <change_request>
	guardian.cq


 processing: question


 processing: question.question_type.question_type

Info: Add virtual field [questions(es)] to <question_type>
	question.question_type


 processing: question.platform.platform

Info: Add virtual field [questions(es)] to <platform>
	question.platform


 processing: question_type


 processing: question_type.platform.platform

Info: Add virtual field [question_types(es)] to <platform>
	question_type.platform


 processing: question_source


 processing: question_source.platform.platform

Info: Add virtual field [question_sources(es)] to <platform>
	question_source.platform


 processing: class_question


 processing: class_question.question_type.question_type

Info: Add virtual field [class_questions(es)] to <question_type>
	class_question.question_type


 processing: class_question.question_source.question_source

Info: Add virtual field [class_questions(es)] to <question_source>
	class_question.question_source


 processing: class_question.wechat_user.creator

Info: Add virtual field [class_questions(es)] to <wechat_user>
	class_question.creator


 processing: class_question.change_request.cq

Info: Add virtual field [class_questions(es)] to <change_request>
	class_question.cq


 processing: class_daily_health_survey


 processing: class_daily_health_survey.school_class.school_class

Info: Add virtual field [class_daily_health_surveys(es)] to <school_class>
	class_daily_health_survey.school_class


 processing: class_daily_health_survey.wechat_user.creator

Info: Add virtual field [class_daily_health_surveys(es)] to <wechat_user>
	class_daily_health_survey.creator


 processing: class_daily_health_survey.change_request.cq

Info: Add virtual field [class_daily_health_surveys(es)] to <change_request>
	class_daily_health_survey.cq


 processing: daily_survey_question


 processing: daily_survey_question.question_type.question_type

Info: Add virtual field [daily_survey_questions(es)] to <question_type>
	daily_survey_question.question_type


 processing: daily_survey_question.class_daily_health_survey.class_daily_health_survey

Info: Add virtual field [daily_survey_questions(es)] to <class_daily_health_survey>
	daily_survey_question.class_daily_health_survey


 processing: daily_survey_question.class_question.class_question

Info: Add virtual field [daily_survey_questions(es)] to <class_question>
	daily_survey_question.class_question


 processing: student


 processing: student.guardian.guardian

Info: Add virtual field [students(es)] to <guardian>
	student.guardian


 processing: student.school_class.school_class

Info: Add virtual field [students(es)] to <school_class>
	student.school_class


 processing: student.change_request.cq

Info: Add virtual field [students(es)] to <change_request>
	student.cq


 processing: student_health_survey


 processing: student_health_survey.student.student

Info: Add virtual field [student_health_surveys(es)] to <student>
	student_health_survey.student


 processing: student_health_survey.survey_status.survey_status

Info: Add virtual field [student_health_surveys(es)] to <survey_status>
	student_health_survey.survey_status


 processing: student_health_survey.school_class.school_class

Info: Add virtual field [student_health_surveys(es)] to <school_class>
	student_health_survey.school_class


 processing: student_health_survey.class_daily_health_survey.class_daily_health_survey

Info: Add virtual field [student_health_surveys(es)] to <class_daily_health_survey>
	student_health_survey.class_daily_health_survey


 processing: student_health_survey.change_request.cq

Info: Add virtual field [student_health_surveys(es)] to <change_request>
	student_health_survey.cq


 processing: student_daily_answer


 processing: student_daily_answer.student_health_survey.student_health_survey

Info: Add virtual field [student_daily_answers(es)] to <student_health_survey>
	student_daily_answer.student_health_survey


 processing: student_daily_answer.daily_survey_question.question

Info: Add virtual field [student_daily_answers(es)] to <daily_survey_question>
	student_daily_answer.question


 processing: student_daily_answer.change_request.cq

Info: Add virtual field [student_daily_answers(es)] to <change_request>
	student_daily_answer.cq


 processing: survey_status


 processing: survey_status.platform.platform

Info: Add virtual field [survey_statuss(es)] to <platform>
	survey_status.platform


 processing: wechat_user


 processing: wechat_user.location.address

Info: Add virtual field [wechat_users(es)] to <location>
	wechat_user.address


 processing: wechat_user.user_type.user_type

Info: Add virtual field [wechat_users(es)] to <user_type>
	wechat_user.user_type


 processing: wechat_user.platform.platform

Info: Add virtual field [wechat_users(es)] to <platform>
	wechat_user.platform


 processing: user_type


 processing: user_type.platform.platform

Info: Add virtual field [user_types(es)] to <platform>
	user_type.platform


 processing: wechat_login_info


 processing: wechat_login_info.wechat_user.wechat_user

Info: Add virtual field [wechat_login_infos(es)] to <wechat_user>
	wechat_login_info.wechat_user


 processing: change_request


 processing: change_request.change_request_type.request_type

Info: Add virtual field [change_requests(es)] to <change_request_type>
	change_request.request_type


 processing: change_request.platform.platform

Info: Add virtual field [change_requests(es)] to <platform>
	change_request.platform


 processing: change_request_type


 processing: change_request_type.platform.platform

Info: Add virtual field [change_request_types(es)] to <platform>
	change_request_type.platform


**************************************************

platform{
	fields(4){
		string	id('ABCD'), verb: false, required: true;
		string	name('健康状态调查平台'), verb: false, required: true;
		string_longtext	description('text()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(14){
		provinceList	platform(__no_group)--platform;
		cityList	platform(__no_group)--platform;
		districtList	platform(__no_group)--platform;
		schoolClassList	platform(__no_group)--platform;
		teacherList	platform(__no_group)--platform;
		guardianList	platform(__no_group)--platform;
		questionList	platform(__no_group)--platform;
		questionTypeList	platform(__no_group)--platform;
		questionSourceList	platform(__no_group)--platform;
		surveyStatusList	platform(__no_group)--platform;
		wechatUserList	platform(__no_group)--platform;
		userTypeList	platform(__no_group)--platform;
		changeRequestList	platform(变更)--platform;
		changeRequestTypeList	platform(__no_group)--platform;
	}
} depth=0; isRoot = true

province{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	name('四川省'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: provinceList;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		cityList	province(__no_group)--province;
		locationList	province(__no_group)--province;
	}
} depth=1; isRoot = false

city{
	fields(6){
		string	id('ABCD'), verb: false, required: true;
		string	name('成都市'), verb: false, required: true;
		province	province('$(object)'), verb: false, required: true, referenceBy: cityList;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: cityList;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		districtList	city(__no_group)--city;
	}
} depth=2; isRoot = false

district{
	fields(6){
		string	id('ABCD'), verb: false, required: true;
		string	name('高新区'), verb: false, required: true;
		city	city('$(object)'), verb: false, required: true, referenceBy: districtList;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: districtList;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		locationList	district(__no_group)--district;
	}
} depth=3; isRoot = false

location{
	fields(8){
		string	id('ABCD'), verb: false, required: true;
		string	name('公司地址|家庭地址'), verb: false, required: true;
		string	address('四川省成都市高新区南华路100号'), verb: false, required: true;
		district	district('$(object)'), verb: false, required: true, referenceBy: locationList;
		province	province('$(object)'), verb: false, required: true, referenceBy: locationList;
		double	latitude('30.31251'), verb: false, required: true;
		double	longitude('104.02931'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		guardianList	address(__no_group)--address;
		wechatUserList	address(__no_group)--address;
	}
} depth=4; isRoot = false

school_class{
	fields(8){
		string	id('ABCD'), verb: false, required: true;
		string	name('教科院一年级5班|教科院二年级3班'), verb: false, required: true;
		teacher	class_teacher('$(object)'), verb: false, required: true, referenceBy: schoolClassList;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: schoolClassList;
		string	schoole('益州小学|大源中学|南山中学'), verb: false, required: true;
		change_request	cq('$(object)'), verb: false, required: true, referenceBy: schoolClassList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(3){
		classDailyHealthSurveyList	school_class(__no_group)--school_class;
		studentList	school_class(__no_group)--school_class;
		studentHealthSurveyList	school_class(__no_group)--school_class;
	}
} depth=4; isRoot = false

teacher{
	fields(8){
		string	id('ABCD'), verb: false, required: true;
		string	name('白山水|胡一刀|苗人凤'), verb: false, required: true;
		string_china_mobile_phone	mobile('18012341234'), verb: false, required: true;
		string	schoole('益州小学|大源中学|南山中学'), verb: false, required: true;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: teacherList;
		change_request	cq('$(object)'), verb: false, required: true, referenceBy: teacherList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		schoolClassList	class_teacher(__no_group)--class_teacher;
	}
} depth=3; isRoot = false

guardian{
	fields(9){
		string	id('ABCD'), verb: false, required: true;
		string	name('刘备|刘玄德|张飞|张翼德'), verb: false, required: true;
		string_china_mobile_phone	mobile('18012341234'), verb: false, required: true;
		location	address('$(object)'), verb: false, required: true, referenceBy: guardianList;
		wechat_user	wechat_user('$(object)'), verb: false, required: true, referenceBy: guardianList;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: guardianList;
		change_request	cq('$(object)'), verb: false, required: true, referenceBy: guardianList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		studentList	guardian(__no_group)--guardian;
	}
} depth=6; isRoot = false

question{
	fields(9){
		string	id('ABCD'), verb: false, required: true;
		string	topic('节假日是否到过武汉|家里是否有武汉的亲朋好友来访|是否有发热、发烧症状'), verb: false, required: true;
		question_type	question_type('$(object)'), verb: false, required: true, referenceBy: questionList;
		string	option_a('没有'), verb: false, required: true;
		string	option_b('有'), verb: false, required: true;
		string	option_c('不确定'), verb: false, required: true;
		string	option_d('不知道'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: questionList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=2; isRoot = false

question_type{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	name('选择题|简答题'), verb: false, required: true;
		string	code('OptionSelect|TextInput'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: questionTypeList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(3){
		questionList	question_type(__no_group)--question_type;
		classQuestionList	question_type(__no_group)--question_type;
		dailySurveyQuestionList	question_type(__no_group)--question_type;
	}
} depth=1; isRoot = false

question_source{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	name('题库|用户自己录入'), verb: false, required: true;
		string	code('System|UGC'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: questionSourceList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		classQuestionList	question_source(__no_group)--question_source;
	}
} depth=1; isRoot = false

class_question{
	fields(11){
		string	id('ABCD'), verb: false, required: true;
		string	topic('节假日是否到过武汉|家里是否有武汉的亲朋好友来访|是否有发热、发烧症状'), verb: false, required: true;
		question_type	question_type('$(object)'), verb: false, required: true, referenceBy: classQuestionList;
		string	option_a('没有'), verb: false, required: true;
		string	option_b('有'), verb: false, required: true;
		string	option_c('不确定'), verb: false, required: true;
		string	option_d('不知道'), verb: false, required: true;
		question_source	question_source('$(object)'), verb: false, required: true, referenceBy: classQuestionList;
		wechat_user	creator('$(object)'), verb: false, required: false, referenceBy: classQuestionList;
		change_request	cq('$(object)'), verb: false, required: true, referenceBy: classQuestionList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		dailySurveyQuestionList	class_question(__no_group)--class_question;
	}
} depth=6; isRoot = false

class_daily_health_survey{
	fields(7){
		string	id('ABCD'), verb: false, required: true;
		string	name('2020年1月25日益州小学学生健康调查问卷'), verb: false, required: true;
		school_class	school_class('$(object)'), verb: false, required: true, referenceBy: classDailyHealthSurveyList;
		date_time	survey_time('2099-12-31T23:59:59'), verb: false, required: true;
		wechat_user	creator('$(object)'), verb: false, required: true, referenceBy: classDailyHealthSurveyList;
		change_request	cq('$(object)'), verb: false, required: true, referenceBy: classDailyHealthSurveyList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		dailySurveyQuestionList	class_daily_health_survey(__no_group)--class_daily_health_survey;
		studentHealthSurveyList	class_daily_health_survey(__no_group)--class_daily_health_survey;
	}
} depth=6; isRoot = false

daily_survey_question{
	fields(10){
		string	id('ABCD'), verb: false, required: true;
		string	topic('节假日是否到过武汉|家里是否有武汉的亲朋好友来访|是否有发热、发烧症状'), verb: false, required: true;
		question_type	question_type('$(object)'), verb: false, required: true, referenceBy: dailySurveyQuestionList;
		string	option_a('没有'), verb: false, required: true;
		string	option_b('有'), verb: false, required: true;
		string	option_c('不确定'), verb: false, required: true;
		string	option_d('不知道'), verb: false, required: true;
		class_daily_health_survey	class_daily_health_survey('$(object)'), verb: false, required: true, referenceBy: dailySurveyQuestionList;
		class_question	class_question('$(object)'), verb: false, required: true, referenceBy: dailySurveyQuestionList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		studentDailyAnswerList	question(__no_group)--question;
	}
} depth=7; isRoot = false

student{
	fields(8){
		string	id('ABCD'), verb: false, required: true;
		string	name('刘婵|刘阿斗|李天一'), verb: false, required: true;
		string_gender	gender('male|female'), verb: false, required: true;
		guardian	guardian('$(object)'), verb: false, required: true, referenceBy: studentList;
		school_class	school_class('$(object)'), verb: false, required: true, referenceBy: studentList;
		string	student_id('A01'), verb: false, required: true;
		change_request	cq('$(object)'), verb: false, required: true, referenceBy: studentList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		studentHealthSurveyList	student(__no_group)--student;
	}
} depth=7; isRoot = false

student_health_survey{
	fields(10){
		string	id('ABCD'), verb: false, required: true;
		student	student('$(object)'), verb: false, required: true, referenceBy: studentHealthSurveyList;
		date_time	answer_time('2099-12-31T23:59:59'), verb: false, required: true;
		survey_status	survey_status('$(object)'), verb: false, required: true, referenceBy: studentHealthSurveyList;
		school_class	school_class('$(object)'), verb: false, required: true, referenceBy: studentHealthSurveyList;
		class_daily_health_survey	class_daily_health_survey('$(object)'), verb: false, required: true, referenceBy: studentHealthSurveyList;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		change_request	cq('$(object)'), verb: false, required: true, referenceBy: studentHealthSurveyList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		studentDailyAnswerList	student_health_survey(__no_group)--student_health_survey;
	}
} depth=8; isRoot = false

student_daily_answer{
	fields(8){
		string	id('ABCD'), verb: false, required: true;
		student_health_survey	student_health_survey('$(object)'), verb: false, required: true, referenceBy: studentDailyAnswerList;
		daily_survey_question	question('$(object)'), verb: false, required: true, referenceBy: studentDailyAnswerList;
		string	answer('A|B'), verb: false, required: true;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		change_request	cq('$(object)'), verb: false, required: true, referenceBy: studentDailyAnswerList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=9; isRoot = false

survey_status{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	name('未提交|已提交|草稿'), verb: false, required: true;
		string	code('UnSubmitted|Submitted|Draft'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: surveyStatusList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		studentHealthSurveyList	survey_status(__no_group)--survey_status;
	}
} depth=1; isRoot = false

wechat_user{
	fields(8){
		string	id('ABCD'), verb: false, required: true;
		string	name('张三|李四|王五'), verb: false, required: true;
		string_image	avatar('wechat.jpg'), verb: false, required: true;
		location	address('$(object)'), verb: false, required: true, referenceBy: wechatUserList;
		user_type	user_type('$(object)'), verb: false, required: true, referenceBy: wechatUserList;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: wechatUserList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(4){
		guardianList	wechat_user(__no_group)--wechat_user;
		classQuestionList	creator(__no_group)--creator;
		classDailyHealthSurveyList	creator(__no_group)--creator;
		wechatLoginInfoList	wechat_user(__no_group)--wechat_user;
	}
} depth=5; isRoot = false

user_type{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	name('老师|家长|学生'), verb: false, required: true;
		string	code('Teacher|Guardian|Student'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: userTypeList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		wechatUserList	user_type(__no_group)--user_type;
	}
} depth=1; isRoot = false

wechat_login_info{
	fields(7){
		string	id('ABCD'), verb: false, required: true;
		wechat_user	wechat_user('$(object)'), verb: false, required: true, referenceBy: wechatLoginInfoList;
		string	app_id('user123'), verb: false, required: true;
		string	open_id('user123'), verb: false, required: true;
		string	session_key('session123'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=6; isRoot = false

change_request{
	fields(7){
		string	id('ABCD'), verb: false, required: true;
		string	name('答题'), verb: false, required: true;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		string_client_ip	remote_ip('remoteIp()'), verb: false, required: true;
		change_request_type	request_type('$(object)'), verb: false, required: true, referenceBy: changeRequestList;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: changeRequestList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(8){
		schoolClassList	cq(__no_group)--cq;
		teacherList	cq(__no_group)--cq;
		guardianList	cq(__no_group)--cq;
		classQuestionList	cq(__no_group)--cq;
		classDailyHealthSurveyList	cq(__no_group)--cq;
		studentList	cq(__no_group)--cq;
		studentHealthSurveyList	cq(__no_group)--cq;
		studentDailyAnswerList	cq(__no_group)--cq;
	}
} depth=2; isRoot = false

change_request_type{
	fields(9){
		string	id('ABCD'), verb: false, required: true;
		string	name('答题'), verb: false, required: true;
		string	code('AnswerQuestion'), verb: false, required: true;
		string	icon('book'), verb: false, required: true;
		int	display_order('1'), verb: false, required: true;
		string_longtext	bind_types('text()'), verb: false, required: true;
		string_longtext	step_configuration('text()'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: changeRequestTypeList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		changeRequestList	request_type(__no_group)--request_type;
	}
} depth=1; isRoot = false

platform{
	fields(4){
		string	id('ABCD'), verb: false, required: true;
		string	name('健康状态调查平台'), verb: false, required: true;
		string_longtext	description('text()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(14){
		provinceList	platform(__no_group)--platform;
		cityList	platform(__no_group)--platform;
		districtList	platform(__no_group)--platform;
		schoolClassList	platform(__no_group)--platform;
		teacherList	platform(__no_group)--platform;
		guardianList	platform(__no_group)--platform;
		questionList	platform(__no_group)--platform;
		questionTypeList	platform(__no_group)--platform;
		questionSourceList	platform(__no_group)--platform;
		surveyStatusList	platform(__no_group)--platform;
		wechatUserList	platform(__no_group)--platform;
		userTypeList	platform(__no_group)--platform;
		changeRequestList	platform(变更)--platform;
		changeRequestTypeList	platform(__no_group)--platform;
	}
} depth=0; isRoot = true

province{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	name('四川省'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: provinceList;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		cityList	province(__no_group)--province;
		locationList	province(__no_group)--province;
	}
} depth=1; isRoot = false

city{
	fields(6){
		string	id('ABCD'), verb: false, required: true;
		string	name('成都市'), verb: false, required: true;
		province	province('$(object)'), verb: false, required: true, referenceBy: cityList;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: cityList;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		districtList	city(__no_group)--city;
	}
} depth=2; isRoot = false

district{
	fields(6){
		string	id('ABCD'), verb: false, required: true;
		string	name('高新区'), verb: false, required: true;
		city	city('$(object)'), verb: false, required: true, referenceBy: districtList;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: districtList;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		locationList	district(__no_group)--district;
	}
} depth=3; isRoot = false

location{
	fields(8){
		string	id('ABCD'), verb: false, required: true;
		string	name('公司地址|家庭地址'), verb: false, required: true;
		string	address('四川省成都市高新区南华路100号'), verb: false, required: true;
		district	district('$(object)'), verb: false, required: true, referenceBy: locationList;
		province	province('$(object)'), verb: false, required: true, referenceBy: locationList;
		double	latitude('30.31251'), verb: false, required: true;
		double	longitude('104.02931'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		guardianList	address(__no_group)--address;
		wechatUserList	address(__no_group)--address;
	}
} depth=4; isRoot = false

school_class{
	fields(8){
		string	id('ABCD'), verb: false, required: true;
		string	name('教科院一年级5班|教科院二年级3班'), verb: false, required: true;
		teacher	class_teacher('$(object)'), verb: false, required: true, referenceBy: schoolClassList;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: schoolClassList;
		string	schoole('益州小学|大源中学|南山中学'), verb: false, required: true;
		change_request	cq('$(object)'), verb: false, required: true, referenceBy: schoolClassList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(3){
		classDailyHealthSurveyList	school_class(__no_group)--school_class;
		studentList	school_class(__no_group)--school_class;
		studentHealthSurveyList	school_class(__no_group)--school_class;
	}
} depth=4; isRoot = false

teacher{
	fields(8){
		string	id('ABCD'), verb: false, required: true;
		string	name('白山水|胡一刀|苗人凤'), verb: false, required: true;
		string_china_mobile_phone	mobile('18012341234'), verb: false, required: true;
		string	schoole('益州小学|大源中学|南山中学'), verb: false, required: true;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: teacherList;
		change_request	cq('$(object)'), verb: false, required: true, referenceBy: teacherList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		schoolClassList	class_teacher(__no_group)--class_teacher;
	}
} depth=3; isRoot = false

guardian{
	fields(9){
		string	id('ABCD'), verb: false, required: true;
		string	name('刘备|刘玄德|张飞|张翼德'), verb: false, required: true;
		string_china_mobile_phone	mobile('18012341234'), verb: false, required: true;
		location	address('$(object)'), verb: false, required: true, referenceBy: guardianList;
		wechat_user	wechat_user('$(object)'), verb: false, required: true, referenceBy: guardianList;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: guardianList;
		change_request	cq('$(object)'), verb: false, required: true, referenceBy: guardianList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		studentList	guardian(__no_group)--guardian;
	}
} depth=6; isRoot = false

question{
	fields(9){
		string	id('ABCD'), verb: false, required: true;
		string	topic('节假日是否到过武汉|家里是否有武汉的亲朋好友来访|是否有发热、发烧症状'), verb: false, required: true;
		question_type	question_type('$(object)'), verb: false, required: true, referenceBy: questionList;
		string	option_a('没有'), verb: false, required: true;
		string	option_b('有'), verb: false, required: true;
		string	option_c('不确定'), verb: false, required: true;
		string	option_d('不知道'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: questionList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=2; isRoot = false

question_type{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	name('选择题|简答题'), verb: false, required: true;
		string	code('OptionSelect|TextInput'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: questionTypeList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(3){
		questionList	question_type(__no_group)--question_type;
		classQuestionList	question_type(__no_group)--question_type;
		dailySurveyQuestionList	question_type(__no_group)--question_type;
	}
} depth=1; isRoot = false

question_source{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	name('题库|用户自己录入'), verb: false, required: true;
		string	code('System|UGC'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: questionSourceList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		classQuestionList	question_source(__no_group)--question_source;
	}
} depth=1; isRoot = false

class_question{
	fields(11){
		string	id('ABCD'), verb: false, required: true;
		string	topic('节假日是否到过武汉|家里是否有武汉的亲朋好友来访|是否有发热、发烧症状'), verb: false, required: true;
		question_type	question_type('$(object)'), verb: false, required: true, referenceBy: classQuestionList;
		string	option_a('没有'), verb: false, required: true;
		string	option_b('有'), verb: false, required: true;
		string	option_c('不确定'), verb: false, required: true;
		string	option_d('不知道'), verb: false, required: true;
		question_source	question_source('$(object)'), verb: false, required: true, referenceBy: classQuestionList;
		wechat_user	creator('$(object)'), verb: false, required: false, referenceBy: classQuestionList;
		change_request	cq('$(object)'), verb: false, required: true, referenceBy: classQuestionList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		dailySurveyQuestionList	class_question(__no_group)--class_question;
	}
} depth=6; isRoot = false

class_daily_health_survey{
	fields(7){
		string	id('ABCD'), verb: false, required: true;
		string	name('2020年1月25日益州小学学生健康调查问卷'), verb: false, required: true;
		school_class	school_class('$(object)'), verb: false, required: true, referenceBy: classDailyHealthSurveyList;
		date_time	survey_time('2099-12-31T23:59:59'), verb: false, required: true;
		wechat_user	creator('$(object)'), verb: false, required: true, referenceBy: classDailyHealthSurveyList;
		change_request	cq('$(object)'), verb: false, required: true, referenceBy: classDailyHealthSurveyList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		dailySurveyQuestionList	class_daily_health_survey(__no_group)--class_daily_health_survey;
		studentHealthSurveyList	class_daily_health_survey(__no_group)--class_daily_health_survey;
	}
} depth=6; isRoot = false

daily_survey_question{
	fields(10){
		string	id('ABCD'), verb: false, required: true;
		string	topic('节假日是否到过武汉|家里是否有武汉的亲朋好友来访|是否有发热、发烧症状'), verb: false, required: true;
		question_type	question_type('$(object)'), verb: false, required: true, referenceBy: dailySurveyQuestionList;
		string	option_a('没有'), verb: false, required: true;
		string	option_b('有'), verb: false, required: true;
		string	option_c('不确定'), verb: false, required: true;
		string	option_d('不知道'), verb: false, required: true;
		class_daily_health_survey	class_daily_health_survey('$(object)'), verb: false, required: true, referenceBy: dailySurveyQuestionList;
		class_question	class_question('$(object)'), verb: false, required: true, referenceBy: dailySurveyQuestionList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		studentDailyAnswerList	question(__no_group)--question;
	}
} depth=7; isRoot = false

student{
	fields(8){
		string	id('ABCD'), verb: false, required: true;
		string	name('刘婵|刘阿斗|李天一'), verb: false, required: true;
		string_gender	gender('male|female'), verb: false, required: true;
		guardian	guardian('$(object)'), verb: false, required: true, referenceBy: studentList;
		school_class	school_class('$(object)'), verb: false, required: true, referenceBy: studentList;
		string	student_id('A01'), verb: false, required: true;
		change_request	cq('$(object)'), verb: false, required: true, referenceBy: studentList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		studentHealthSurveyList	student(__no_group)--student;
	}
} depth=7; isRoot = false

student_health_survey{
	fields(10){
		string	id('ABCD'), verb: false, required: true;
		student	student('$(object)'), verb: false, required: true, referenceBy: studentHealthSurveyList;
		date_time	answer_time('2099-12-31T23:59:59'), verb: false, required: true;
		survey_status	survey_status('$(object)'), verb: false, required: true, referenceBy: studentHealthSurveyList;
		school_class	school_class('$(object)'), verb: false, required: true, referenceBy: studentHealthSurveyList;
		class_daily_health_survey	class_daily_health_survey('$(object)'), verb: false, required: true, referenceBy: studentHealthSurveyList;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		change_request	cq('$(object)'), verb: false, required: true, referenceBy: studentHealthSurveyList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		studentDailyAnswerList	student_health_survey(__no_group)--student_health_survey;
	}
} depth=8; isRoot = false

student_daily_answer{
	fields(8){
		string	id('ABCD'), verb: false, required: true;
		student_health_survey	student_health_survey('$(object)'), verb: false, required: true, referenceBy: studentDailyAnswerList;
		daily_survey_question	question('$(object)'), verb: false, required: true, referenceBy: studentDailyAnswerList;
		string	answer('A|B'), verb: false, required: true;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		change_request	cq('$(object)'), verb: false, required: true, referenceBy: studentDailyAnswerList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=9; isRoot = false

survey_status{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	name('未提交|已提交|草稿'), verb: false, required: true;
		string	code('UnSubmitted|Submitted|Draft'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: surveyStatusList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		studentHealthSurveyList	survey_status(__no_group)--survey_status;
	}
} depth=1; isRoot = false

wechat_user{
	fields(8){
		string	id('ABCD'), verb: false, required: true;
		string	name('张三|李四|王五'), verb: false, required: true;
		string_image	avatar('wechat.jpg'), verb: false, required: true;
		location	address('$(object)'), verb: false, required: true, referenceBy: wechatUserList;
		user_type	user_type('$(object)'), verb: false, required: true, referenceBy: wechatUserList;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: wechatUserList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(4){
		guardianList	wechat_user(__no_group)--wechat_user;
		classQuestionList	creator(__no_group)--creator;
		classDailyHealthSurveyList	creator(__no_group)--creator;
		wechatLoginInfoList	wechat_user(__no_group)--wechat_user;
	}
} depth=5; isRoot = false

user_type{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	name('老师|家长|学生'), verb: false, required: true;
		string	code('Teacher|Guardian|Student'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: userTypeList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		wechatUserList	user_type(__no_group)--user_type;
	}
} depth=1; isRoot = false

wechat_login_info{
	fields(7){
		string	id('ABCD'), verb: false, required: true;
		wechat_user	wechat_user('$(object)'), verb: false, required: true, referenceBy: wechatLoginInfoList;
		string	app_id('user123'), verb: false, required: true;
		string	open_id('user123'), verb: false, required: true;
		string	session_key('session123'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=6; isRoot = false

change_request{
	fields(7){
		string	id('ABCD'), verb: false, required: true;
		string	name('答题'), verb: false, required: true;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		string_client_ip	remote_ip('remoteIp()'), verb: false, required: true;
		change_request_type	request_type('$(object)'), verb: false, required: true, referenceBy: changeRequestList;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: changeRequestList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(8){
		schoolClassList	cq(__no_group)--cq;
		teacherList	cq(__no_group)--cq;
		guardianList	cq(__no_group)--cq;
		classQuestionList	cq(__no_group)--cq;
		classDailyHealthSurveyList	cq(__no_group)--cq;
		studentList	cq(__no_group)--cq;
		studentHealthSurveyList	cq(__no_group)--cq;
		studentDailyAnswerList	cq(__no_group)--cq;
	}
} depth=2; isRoot = false

change_request_type{
	fields(9){
		string	id('ABCD'), verb: false, required: true;
		string	name('答题'), verb: false, required: true;
		string	code('AnswerQuestion'), verb: false, required: true;
		string	icon('book'), verb: false, required: true;
		int	display_order('1'), verb: false, required: true;
		string_longtext	bind_types('text()'), verb: false, required: true;
		string_longtext	step_configuration('text()'), verb: false, required: true;
		platform	platform('$(object)'), verb: false, required: true, referenceBy: changeRequestTypeList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		changeRequestList	request_type(__no_group)--request_type;
	}
} depth=1; isRoot = false

user_domain{
	fields(3){
		string	id('ABCD'), verb: false, required: true;
		string	name('用户区域'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		userWhiteListList	domain(__no_group)--domain;
		secUserList	domain(__no_group)--domain;
	}
} depth=0; isRoot = true

user_white_list{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	user_identity('clariones|13808188512'), verb: false, required: true;
		string	user_special_functions('tester;ios-spokesperson'), verb: false, required: true;
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: userWhiteListList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

sec_user{
	fields(13){
		string	id('ABCD'), verb: false, required: true;
		string	login('login'), verb: false, required: true;
		string_china_mobile_phone	mobile('13900000001'), verb: false, required: true;
		string_email	email('suddy_chang@163.com'), verb: false, required: true;
		string_password	pwd('*******'), verb: false, required: true;
		string	weixin_openid('wx123456789abcdefghijklmn'), verb: false, required: true;
		string	weixin_appid('wxapp12098410239840'), verb: false, required: true;
		string	access_token('jwt_token_12345678'), verb: false, required: true;
		int	verification_code('0|9999999'), verb: false, required: true;
		date_time	verification_code_expire('2099-12-31T09:09:09'), verb: false, required: true;
		date_time	last_login_time('2099-12-31T09:09:09'), verb: false, required: false;
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: secUserList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(4){
		userAppList	sec_user(__no_group)--sec_user;
		loginHistoryList	sec_user(__no_group)--sec_user;
		wechatWorkappIdentifyList	sec_user(__no_group)--sec_user;
		wechatMiniappIdentifyList	sec_user(__no_group)--sec_user;
	}
} depth=1; isRoot = false

user_app{
	fields(10){
		string	id('ABCD'), verb: false, required: true;
		string	title('审车平台|账户管理|接车公司|审车公司|维修公司|顾客'), verb: false, required: true;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: userAppList;
		string	app_icon('users|bank|wechat|bar-chart|user|users'), verb: false, required: true;
		bool	full_access('true'), verb: false, required: true;
		string	permission('MXWR|MXWR'), verb: false, required: true;
		string	object_type('CarInspectionPlatform|UserDomain|CarReceivingServiceCompany|CarInspectionServiceCompany|CarRepairingServiceCompany|CustomerInfo'), verb: false, required: true;
		string	object_id('CIP000001|UD000001|CRSC000001|CISC000001|CRSC000001|CI000001'), verb: false, required: true;
		string	location('/link/to/app'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(3){
		quickLinkList	app(__no_group)--app;
		listAccessList	app(__no_group)--app;
		objectAccessList	app(__no_group)--app;
	}
} depth=2; isRoot = false

quick_link{
	fields(8){
		string	id('ABCD'), verb: false, required: true;
		string	name('列表'), verb: false, required: true;
		string	icon('facebook|google'), verb: false, required: true;
		string_image	image_path('y-200-200-red.jpg'), verb: false, required: true;
		string	link_target('列表'), verb: false, required: true;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: quickLinkList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

list_access{
	fields(10){
		string	id('ABCD'), verb: false, required: true;
		string	name('列表'), verb: false, required: true;
		string	internal_name('levelOneCategoryList'), verb: false, required: true;
		bool	read_permission('true'), verb: false, required: true;
		bool	create_permission('true'), verb: false, required: true;
		bool	delete_permission('true'), verb: false, required: true;
		bool	update_permission('true'), verb: false, required: true;
		bool	execution_permission('true'), verb: false, required: true;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: listAccessList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

object_access{
	fields(14){
		string	id('ABCD'), verb: false, required: true;
		string	name('控制访问列表1'), verb: false, required: true;
		string	object_type('FranchiseeStoreCountryCenter|AccountSet'), verb: false, required: true;
		string	list1('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list2('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list3('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list4('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list5('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list6('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list7('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list8('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list9('catalogList|levelOneCategoryList'), verb: false, required: true;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: objectAccessList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

login_history{
	fields(6){
		string	id('ABCD'), verb: false, required: true;
		date_time_create	login_time('createTime()'), verb: false, required: true;
		string	from_ip('192.168.1.1|192.168.1.2'), verb: false, required: true;
		string	description('登陆成功'), verb: false, required: true;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: loginHistoryList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=2; isRoot = false

generic_form{
	fields(4){
		string	id('ABCD'), verb: false, required: true;
		string	title('登记输入单'), verb: false, required: true;
		string	description('姓名就是你身份证上的名字'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(4){
		formMessageList	form(__no_group)--form;
		formFieldMessageList	form(__no_group)--form;
		formFieldList	form(__no_group)--form;
		formActionList	form(__no_group)--form;
	}
} depth=0; isRoot = true

form_message{
	fields(5){
		string	id('ABCD'), verb: false, required: true;
		string	title('字段组合错误'), verb: false, required: true;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formMessageList;
		string	level('success|info|warning|danger'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

form_field_message{
	fields(6){
		string	id('ABCD'), verb: false, required: true;
		string	title('输入错误'), verb: false, required: true;
		string	parameter_name('name'), verb: false, required: true;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formFieldMessageList;
		string	level('success|info|warning|danger'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

form_field{
	fields(18){
		string	id('ABCD'), verb: false, required: true;
		string	label('姓名|年龄|出生地|国籍'), verb: false, required: true;
		string	locale_key('name|age|birth_place|country'), verb: false, required: true;
		string	parameter_name('name'), verb: false, required: true;
		string	type('text|longtext|date|date_time|money|url|image|password|number|switch|vcode'), verb: false, required: true;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formFieldList;
		string	placeholder('姓名就是你身份证上的名字'), verb: false, required: true;
		string	default_value('李一一'), verb: false, required: true;
		string	description('姓名就是你身份证上的名字'), verb: false, required: true;
		string	field_group('基础信息|扩展信息'), verb: false, required: true;
		string	minimum_value('maybe any value'), verb: false, required: true;
		string	maximum_value('a value expression'), verb: false, required: true;
		bool	required('true|false'), verb: false, required: true;
		bool	disabled('true|false'), verb: false, required: true;
		bool	custom_rendering('false'), verb: false, required: true;
		string	candidate_values('|||男,女|高,矮'), verb: false, required: false;
		string	suggest_values('|||男,女|高,矮'), verb: false, required: false;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

form_action{
	fields(8){
		string	id('ABCD'), verb: false, required: true;
		string	label('功能'), verb: false, required: true;
		string	locale_key('name'), verb: false, required: true;
		string	action_key('save|update|remove'), verb: false, required: true;
		string	level('default|warning|danger|primary'), verb: false, required: true;
		string	url('genericFormManager/name/name0002/name0003/'), verb: false, required: true;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formActionList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

candidate_container{
	fields(3){
		string	id('ABCD'), verb: false, required: true;
		string	name('我只是一个容器'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		candidateElementList	container(__no_group)--container;
	}
} depth=0; isRoot = true

candidate_element{
	fields(6){
		string	id('ABCD'), verb: false, required: true;
		string	name('搜索到的匹配字段'), verb: false, required: true;
		string	type('类型描述'), verb: false, required: true;
		string_image	image('1.jpg'), verb: false, required: true;
		candidate_container	container('$(object)'), verb: false, required: true, referenceBy: candidateElementList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

wechat_workapp_identify{
	fields(7){
		string	id('ABCD'), verb: false, required: true;
		string	corp_id('corporation123'), verb: false, required: true;
		string	user_id('user123'), verb: false, required: true;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: wechatWorkappIdentifyList;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		date_time	last_login_time('2100-01-01T00:00:00'), verb: false, required: false;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=2; isRoot = false

wechat_miniapp_identify{
	fields(7){
		string	id('ABCD'), verb: false, required: true;
		string	open_id('wechat_open_id_1234567890'), verb: false, required: true;
		string	app_id('wechat_miniapp_id_1234567890'), verb: false, required: true;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: wechatMiniappIdentifyList;
		date_time_create	create_time('createTime()'), verb: false, required: true;
		date_time	last_login_time('2100-01-01T00:00:00'), verb: false, required: false;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=2; isRoot = false




=================================End Report=================================
