<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<!--
	加载它需要13秒时间，太长了，测试期间不需要
	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>  -->


	<import resource="classpath*:/META-INF/health.xml" />
	<import resource="classpath*:/META-INF/health_manager.xml" />
	
		<import resource="classpath*:/META-INF/change_request_custom.xml" />
	

	<bean id="checker" class="com.doublechaintech.health.CustomHealthChecker" scope="prototype"></bean>

	<bean id="secUserManager" class="com.doublechaintech.health.secuser.SecUserCustomManagerImpl">
	 	<property name="cacheService" ref="cacheService" />
	 	<property name="storageService" ref="storageService"/>
	 	<property name="blockChainAdvancer" ref="blockChainAdvancer"/>
	 	<property name="esClient" ref="elasticsearchClient" />
	 	<property name="smtpService" ref="smtpService" />

	 	<!--

	 	默认情况下不开图服务和kafka消息服务

	 	<property name="graphService" ref="graphService" />
	 	<property name="eventService" ref="kafkaMessageEventService" />

	 	<property name="graphService" ref="dummygraphService" />
	 	<property name="eventService" ref="dummyEventService" />



	 	-->


	 	<property name="graphService" ref="dummygraphService" />
	 	<property name="eventService" ref="dummyEventService" />

	 	<property name="messageService" ref="messageService" />
	 	<property name="daoGroup" ref="DAOGroup" />
	 	<property name="managerGroup" ref="managerGroup" />
	 	<property name="checkerBeanName" value="checker" />

	</bean>

	<bean id="wxMaService"	class="cn.binarywang.wx.miniapp.api.impl.WxMaServiceImpl">
		<property name="wxMaConfig">
			<bean class="cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl">
				<property name="appid" value="${app.wx.appId}" />
				<property name="secret" value="${app.wx.secret}" />
				<property name="token" value="${app.wx.token}" />
				<property name="aesKey" value="${app.wx.aesKey}" />
			</bean>
		</property>
	</bean>

	<!--  企业微信
	<bean id="wxCpService"	class="me.chanjar.weixin.cp.api.impl.WxCpServiceImpl">
		<property name="wxCpConfigStorage">
			<bean id="wxworkConfig" class="me.chanjar.weixin.cp.config.impl.WxCpDefaultConfigImpl">
				<property name="corpId" value="${app.wxwork.corpId}" />
				<property name="corpSecret" value="${app.wxwork.corpSecret}" />
				<property name="agentId" value="${app.wxwork.agentId}" />
				<property name="token" value="${app.wxwork.token}" />
				<property name="aesKey" value="${app.wxwork.aesKey}" />
			</bean>
		</property>
	</bean>
	-->
	

	<!-- 手机号+验证码 认证 -->
	<bean id="mobileVCodeIdentifier" class="com.doublechaintech.health.iamservice.MobileVCodeHandler"/>
	<!-- 账号(ID|手机号|账号|email)+密码 认证 -->
	<bean id="accountPasswordIdentifier" class="com.doublechaintech.health.iamservice.LoginIdAndPasswordHandler"/>
	<!-- 微信小程序 认证
	<bean id="wechatMiniProgramIdentifier" class="com.doublechaintech.health.iamservice.WechatMiniprogramHandler">
		<property name="wxService" ref="wxMaService"/>
	</bean>
	-->
	<!-- 企业微信小程序 认证
	<bean id="wechatWorkMiniProgramIdentifier" class="com.doublechaintech.health.iamservice.WechatWorkAppHandler">
		<property name="wxService" ref="wxCpService"/>
	</bean>
	 -->
	<!-- 登录服务配置 -->
	<bean id="iamService" class="com.doublechaintech.health.services.IamService">
		<property name="idHandlers">
			<map>
				<entry key="MOBILE://.*" value-ref="mobileVCodeIdentifier"/>
				<entry key="PASSWORD://.*" value-ref="accountPasswordIdentifier"/>
				<!--
				<entry key="WECHAT_MINIPROGRAM://.*" value-ref="wechatMiniProgramIdentifier"/>
				<entry key="WECHAT_WORK_MINIPROGRAM://.*" value-ref="wechatWorkMiniProgramIdentifier"/>
				-->
			</map>
		</property>
	</bean>
	
	
	
	<bean id="wxappService"	class="com.doublechaintech.health.wechatapp.WechatAppViewBizService">
		<property name="wxMaService" ref="wxMaService"/>
		<property name="changeRequestService" ref="changeRequestService"/>
	</bean>
	
	
	<bean id="aliyunOssServiceConfiguration" class="com.skynet.infrastructure.AliyunServiceConfiguration">
		<property name="accessKeyId" value="${health.aliyun.oss.accessKeyId}"/>
		<property name="accessKeySecret" value="${health.aliyun.oss.accessKeySecret}"/>
		<property name="ossBucket" value="${aliyun.oss.ossBucket}"/>
		<property name="roleArn" value="${aliyun.oss.roleArn}"/>
		<property name="policy" value="${aliyun.oss.policy}"/>
		<property name="endpoint" value="${aliyun.oss.endpoint}"/>
		<property name="region" value="${aliyun.oss.region}"/>
		<property name="stsVersion" value="${aliyun.oss.stsVersion}"/>
		<property name="durationSeconds" value="${aliyun.oss.durationSeconds}"/>
    </bean>


</beans>


